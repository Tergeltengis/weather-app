{"mappings":"","sources":["src/app.js"],"sourcesContent":["const findCountry = async () => {\n  const listCountry = document.querySelector(\"ol\");\n  //clear ol\n  listCountry.innerHTML = \"\";\n\n  // fetch country coordinates\n  const searchInput = document.querySelector(\"#search\").value;\n  const getData = await fetch(\n    `https://api.mapbox.com/geocoding/v5/mapbox.places/${searchInput}.json?access_token=pk.eyJ1IjoidHVydXV1dSIsImEiOiJjbDBhZW15ZHAwMGhjM2RtZjB6dnltZnhjIn0.HSb4dmJFSM2USxDkTsScDg`\n  );\n  const data = await getData.json();\n\n  // render suggest countries\n  for (let i = 0; i < data.features.length; i++) {\n    const findBtn = document.createElement(\"button\");\n    findBtn.innerText = \"FIND\";\n    findBtn.onclick = () => {\n      findWeather(data.features[i].center, data.features[i].place_name);\n    };\n    const liTag = document.createElement(\"li\");\n    liTag.innerHTML = data.features[i].place_name;\n    liTag.append(findBtn);\n    listCountry.append(liTag);\n  }\n};\n\nconst findWeather = (center, place_name) => {\n  secFunction(center[1], center[0], place_name);\n};\n\nconst secFunction = async (lat, lng, place_name) => {\n  try {\n    const getData = await fetch(\n      `https://api.darksky.net/forecast/81d38b9c958eb018e01083a72b0926b5/${lat},${lng}`\n    );\n    const data = await getData.json();\n    \n    const today = data.daily.data[0];\n    // High temp\n    const celsMax = parseInt(((today.temperatureMax - 32) * 5) / 9);\n    // Low temp\n    const celsMin = parseInt(((today.temperatureMin - 32) * 5) / 9);\n    \n    //Date\n    // timestamp to date\n    document.querySelectorAll(\"p\")[0].innerText = new Date(\n      today.time * 1000\n    ).toDateString();\n    document.querySelectorAll(\"p\")[1].innerText = new Date(\n      today.time * 1000\n    ).toDateString();\n\n    // location name\n    document.querySelectorAll(\"h1\")[0].innerText = place_name;\n    document.querySelectorAll(\"h1\")[1].innerText = place_name;\n    \n    //high temp\n    console.log(celsMax);\n    document.querySelector(\".high\").innerHTML = celsMax + \"°\";\n    console.log(celsMin);\n    document.querySelector(\".low\").innerHTML = celsMin + \"°\";\n    // icon\n    console.log(today.icon);\n    document.querySelectorAll(\".state\")[0].innerHTML =\n      today.icon[0].toUpperCase() + today.icon.slice(1);\n    document.querySelectorAll(\".state\")[1].innerHTML =\n      today.icon[0].toUpperCase() + today.icon.slice(1);\n      \n    //image\n    switch (today.icon) {\n      case \"rain\":\n        document.querySelectorAll(\".weather-icon\")[0].src = \"./static/rain.png\";\n        document.querySelectorAll(\".weather-icon\")[1].src =\n          \"./static/nrain.png\";\n        break;\n      case \"cloudy\":\n        document.querySelectorAll(\".weather-icon\")[0].src =\n          \"./static/cloudy.png\";\n        document.querySelectorAll(\".weather-icon\")[1].src =\n          \"./static/ncloudy.png\";\n        break;\n      default:\n        document.querySelectorAll(\".weather-icon\")[0].src =\n          \"./static/sunny.png\";\n        document.querySelectorAll(\".weather-icon\")[1].src =\n          \"./static/sunny.png\";\n        break;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":[],"version":3,"file":"index.fed2d6e6.js.map"}