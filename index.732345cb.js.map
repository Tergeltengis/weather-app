{"mappings":"ACAA,MAAM,EAAc,SAAS,aAAA,CAAc,WA0B3C,EAAY,gBAAA,CAAiB,WAAY,SAAU,CAAK,EACpC,UAAd,EAAM,GAAA,GACR,EAAM,cAAN,GACA,SAAS,cAAA,CAAe,aAAa,KAArC,GAEJ","sources":["<anon>","src/app.js"],"sourcesContent":["const searchInput = document.querySelector(\"#search\");\nconst appId = \"58b6f7c78582bffab3936dac99c31b25\";\nconst findCountry = async ()=>{\n    const listCountry = document.querySelector(\"ol\");\n    //clear ol\n    listCountry.innerHTML = \"\";\n    // fetch country coordinates\n    const getData = await fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${searchInput.value}.json?access_token=pk.eyJ1IjoidHVydXV1dSIsImEiOiJjbDBhZW15ZHAwMGhjM2RtZjB6dnltZnhjIn0.HSb4dmJFSM2USxDkTsScDg`);\n    const data = await getData.json();\n    // render suggest countries\n    for(let i = 0; i < data.features.length; i++){\n        const findBtn = document.createElement(\"button\");\n        findBtn.innerText = \"FIND\";\n        findBtn.addEventListener(\"click\", ()=>{\n            findWeather(data.features[i].center, data.features[i].place_name);\n        });\n        const liTag = document.createElement(\"li\");\n        liTag.innerHTML = data.features[i].place_name;\n        liTag.append(findBtn);\n        listCountry.append(liTag);\n    }\n};\nsearchInput.addEventListener(\"keypress\", function(event) {\n    if (event.key === \"Enter\") {\n        event.preventDefault();\n        document.getElementById(\"searchBtn\").click();\n    }\n});\nconst findWeather = (center, place_name)=>{\n    secFunction(center[1], center[0], place_name);\n};\nconst secFunction = async (lat, lng, place_name)=>{\n    try {\n        const getData = await fetch(`https://api.openweathermap.org/data/2.5/forecast/daily?lat=${lat}&lon=${lng}&cnt=1&appid=${appId}&units=metric`);\n        const data = await getData.json();\n        const today = data.list[0];\n        //Date\n        // timestamp to date\n        document.querySelectorAll(\"p\")[0].innerText = new Date(today.dt * 1000).toDateString();\n        document.querySelectorAll(\"p\")[1].innerText = new Date(today.dt * 1000).toDateString();\n        // location name\n        document.querySelectorAll(\"h1\")[0].innerText = place_name;\n        document.querySelectorAll(\"h1\")[1].innerText = place_name;\n        //high temp\n        document.querySelector(\".high\").innerHTML = Math.floor(today.temp.max) + \"\\xb0\";\n        document.querySelector(\".low\").innerHTML = Math.floor(today.temp.min) + \"\\xb0\";\n        // icon\n        document.querySelectorAll(\".state\")[0].innerHTML = today.weather[0].main;\n        document.querySelectorAll(\".state\")[1].innerHTML = today.weather[0].main;\n        //image\n        document.querySelectorAll(\".weather-icon\")[0].src = `./static/images/day/${today.weather[0].main}.png`;\n        document.querySelectorAll(\".weather-icon\")[1].src = `./static/images/night/${today.weather[0].main}.png`;\n    } catch (error) {\n        console.log(error);\n    }\n};\n\n//# sourceMappingURL=index.732345cb.js.map\n","const searchInput = document.querySelector(\"#search\");\nconst appId = \"58b6f7c78582bffab3936dac99c31b25\";\nconst findCountry = async () => {\n  const listCountry = document.querySelector(\"ol\");\n  //clear ol\n  listCountry.innerHTML = \"\";\n\n  // fetch country coordinates\n  const getData = await fetch(\n    `https://api.mapbox.com/geocoding/v5/mapbox.places/${searchInput.value}.json?access_token=pk.eyJ1IjoidHVydXV1dSIsImEiOiJjbDBhZW15ZHAwMGhjM2RtZjB6dnltZnhjIn0.HSb4dmJFSM2USxDkTsScDg`\n  );\n  const data = await getData.json();\n\n  // render suggest countries\n  for (let i = 0; i < data.features.length; i++) {\n    const findBtn = document.createElement(\"button\");\n    findBtn.innerText = \"FIND\";\n    findBtn.addEventListener(\"click\", () => {\n      findWeather(data.features[i].center, data.features[i].place_name);\n    });\n    const liTag = document.createElement(\"li\");\n    liTag.innerHTML = data.features[i].place_name;\n    liTag.append(findBtn);\n    listCountry.append(liTag);\n  }\n};\nsearchInput.addEventListener(\"keypress\", function (event) {\n  if (event.key === \"Enter\") {\n    event.preventDefault();\n    document.getElementById(\"searchBtn\").click();\n  }\n});\nconst findWeather = (center, place_name) => {\n  secFunction(center[1], center[0], place_name);\n};\n\nconst secFunction = async (lat, lng, place_name) => {\n  try {\n    const getData = await fetch(\n      `https://api.openweathermap.org/data/2.5/forecast/daily?lat=${lat}&lon=${lng}&cnt=1&appid=${appId}&units=metric`\n    );\n    const data = await getData.json();\n    const today = data.list[0];\n\n    //Date\n    // timestamp to date\n    document.querySelectorAll(\"p\")[0].innerText = new Date(\n      today.dt * 1000\n    ).toDateString();\n    document.querySelectorAll(\"p\")[1].innerText = new Date(\n      today.dt * 1000\n    ).toDateString();\n\n    // location name\n    document.querySelectorAll(\"h1\")[0].innerText = place_name;\n    document.querySelectorAll(\"h1\")[1].innerText = place_name;\n\n    //high temp\n    document.querySelector(\".high\").innerHTML =\n      Math.floor(today.temp.max) + \"°\";\n    document.querySelector(\".low\").innerHTML = Math.floor(today.temp.min) + \"°\";\n    // icon\n    document.querySelectorAll(\".state\")[0].innerHTML = today.weather[0].main;\n    document.querySelectorAll(\".state\")[1].innerHTML = today.weather[0].main;\n\n    //image\n\n    document.querySelectorAll(\n      \".weather-icon\"\n    )[0].src = `./static/images/day/${today.weather[0].main}.png`;\n    document.querySelectorAll(\n      \".weather-icon\"\n    )[1].src = `./static/images/night/${today.weather[0].main}.png`;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["searchInput","document","querySelector","addEventListener","event","key","preventDefault","getElementById","click"],"version":3,"file":"index.732345cb.js.map"}